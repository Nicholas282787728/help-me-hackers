- title "#{@task.title} - #{t('application.title')}"
- content_for :header_script do
  = javascript_include_tag 'http://ajax.microsoft.com/ajax/jquery.validate/1.7/jquery.validate.min.js'
  = javascript_include_tag 'jquery.validator.messages_ja'
  :javascript
    $(function(){
      $('.pay_dialog').dialog({
        autoOpen: false,
        title: '#{t('Bounty paying')}',
        modal: true,
        draggable: false,
        resizable: false,
        width: 500,
        buttons: {
          '#{t('Pay by Paypal')}': function() {
          },
          '#{t('Payment was completed')}': function() {
            var i = $(this).attr('id').split('_')[1]
            $.post('/bounties/' + i, $('#payed_form' + i).serialize(), function(data) {
              location.reload()
            })
          }
        }
      })

      $('.bounties .pay').click(function() {
        var i = $(this).attr('id').split('_')[1]
        $('#pay_dialog_' + i).dialog('open')
      })

      $('#new_bounty').dialog({
        autoOpen: false,
        title: '#{t('Add Bounty')}',
        modal: true,
        draggable: false,
        resizable: false,
        width: 500,
        buttons: {
          '#{t('Add')}': function() {
            if ($(this).valid()) $(this).submit()
          }
        },
      }).submit(function() {
        var f = $(this)
        $.post('/bounties', $(this).serialize(), function(data) {
          //var org = numerize($('.total_bounty .number').text())
          //var add = parseInt($('#bounty_amount').val())
          //$('.total_bounty .number').text(number_format(org + add))
          //f.dialog('close')
          location.reload()
        })
        return false
      }).validate({
        rules: {
          'bounty[amount]': {
            required: true,
            min: 100
          }
        }
      })

      $('.add_bounty').click(function() {
        $('#new_bounty').dialog('open')
      })
    })
%div{task_attrs(@task)}
  .main
    .title
      %div{good_attrs(@task)}
        %ul
          %li.count{:id => "task_#{@task.id}_good"}= @task.votes.size
      %h2= @task.title
      - form_for @task.votes.new(:comment => good_task_retweet(@task)), :html => {:id => "task_#{@task.id}_vote_form", :style => 'display:none'} do |f|
        - if logged_in?
          .text
            = f.hidden_field :voteable_id, :id => "task_#{@task.id}_voteable_id"
            = f.hidden_field :voteable_type, :id => "task_#{@task.id}_voteable_type"
            = f.text_field :comment, :id => "task_#{@task.id}_comment", :size => '140', :maxlength => 140
          - if logged_in?
            .button= image_submit_tag 'good_button.gif'
          - else
            .button= link_to 'Retweet', login_path
          %p.center Retweetをすることで、このタスクにGood!ポイントが加算されます
        - else
          .please_login== Retweetするには#{link_to 'Twitterでログイン', login_path}してください。
    %dl.information
      %dd.licence=link_to t("label.license.#{@task.license.name}"), "#{about_license_path}##{@task.license.name}"
      %dt.licence= t('activerecord.attributes.task.license')
    .description~markdown @task.description
    - if @task.source_url.present?
      .source_url
        %h4= t('activerecord.attributes.task.source_url')
        =link_to truncate(h(@task.source_url), :length => 52), h(@task.source_url)
    - unless @task.tags.empty?
      %ul.tags
        - @task.tags.each do |tag|
          %li.tag=link_to h(tag.name), tasks_by_tag_path(:tag => tag.name)
    - if logged_in? and @task.user.id == current_user.id
      %ul.loggedin
        %li.edit= link_to t('Edit this task'), edit_task_path(@task)
        %li.delete= link_to t('Delete this task'), @task, :confirm => t('Are you sure'), :method => :delete
  .sub
    .information
      %dl
        %dt.language= t('Programming language')
        %dd.language=link_to t("label.language.#{@task.language.name}"), tasks_by_language_path(:language => @task.language.name)
        - if @task.project
          %dt.project= t('Project')
          %dd.project=link_to h(@task.project.name), @task.project
        - if @task.total_bounty > 0
          %dt.bounty= t('Total bounty')
          %dd.bounty
            %span= t('Total')
            %span.total_bounty
              = number_to_currency_with_span @task.total_bounty
      %ul.retweet
        %li.count= @task.votes.size
        %li.label= t('Retweet')
      %ul.comment
        %li.count= @task.comments.size
        %li.label= t('Comment')
      .person
        %ul
          %li.icon=link_to image_tag(@task.user.profile_image_url), user_path(@task.user)
          %li.name=link_to @task.user.login, user_path(@task.user)
      %ul.bounties
        - @bounties.each do |bounty|
          %li.bounty{:id => "bounty_#{bounty.id}"}
            .icon= link_to image_tag(bounty.user.profile_image_url), user_path(bounty.user)
            .login= link_to bounty.user.login, user_path(bounty.user)
            .amount= number_to_currency bounty.amount
            - if logged_in? and @task.solved? and bounty.user.id == current_user.id
              .pay.button{:id => "pay_#{bounty.id}"}= t('Pay')
              %div{:id => "pay_dialog_#{bounty.id}", :class => 'pay_dialog'}
                .icon= link_to image_tag(@task.solver.profile_image_url), user_path(@task.solver)
                %h2= t('Payment for name', :name => link_to(@task.solver.login, user_path(@task.solver)))
                %label= t('Bounty')
                .amount= number_to_currency bounty.amount
                - bounty.pay = true
                - form_for bounty, :html => {:id => "payed_form_#{bounty.id}"} do |f|
                  = f.hidden_field :pay
                = render :partial => 'tasks/payment_button', :locals => {:task => bounty.task, :bounty => bounty, :user => bounty.task.solver}
                %p= t('Please push payment was completed button if payment is accepted by Paypal')
      - if logged_in?
        .add_bounty.button= t('Add Bounty')
        - form_for @bounty do |f|
          = f.hidden_field :task_id
          = f.label :amount
          = f.text_field :amount, :size => 20
      .created_at== #{time_ago_in_words @task.created_at}前
  - unless @comments.empty?
    .section
      %h3 コメント
      %ul.comments
        = render :partial => 'comment', :collection => @comments
  = will_paginate(@comments)
  .section.post
    %h3 コメントする
    %span== （#{link_to 'Markdown記法', 'http://blog.2310.net/archives/6', :target => '_blank'} が使えます）
    %span （コメントはTwitterにも飛びます）
    - if logged_in?
      - form_for @comment do |f|
        = f.error_messages
        = f.hidden_field :task_id
        = f.text_area :description, :size => '70x10'
        %h4 プレビュー
        .wrapper
          .preview
        %p
          = f.submit '利用規約に同意してコメントする'
          - if logged_in? and @task.user.id == current_user.id and @task.unsolved?
            = f.submit 'コメントして自己解決', :name => 'commit_and_solve'
          = link_to '利用規約', about_terms_path, :target => '_blank'
    - else
      .please_login== コメントするには#{link_to 'Twitterでログイン', login_path}してください。
- content_for :footer_script do
  = javascript_include_tag 'markedit/showdown'
  = javascript_include_tag 'markedit/markedit.lang.ja'
  = javascript_include_tag 'markedit/jquery.markedit'
  = javascript_include_tag 'mk'
